{"ast":null,"code":"var _jsxFileName = \"F:\\\\crm01\\\\appac-crm\\\\src\\\\component\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  isVisible\n}) {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [user, setUserdata] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const empid = user.username;\n  const password = user.password;\n\n  // Initialize useNavigate\n  const navigate = useNavigate();\n  const onLogin = () => {\n    fetch('http://localhost:8000/testapi/v1/login', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        empid,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(empid);\n      if (data && data.success) {\n        // Check if the user's empid matches and the password is correct\n        if (data.empid === empid && data.password === password) {\n          alert('User is present, login successful');\n          // Redirect to homepage or another URL\n          sessionStorage.setItem(user === empid);\n          sessionStorage.getItemItem(user === empid);\n          navigate('/dashboard'); // Change the URL to \"/\"\n        } else {\n          alert('Invalid credentials');\n        }\n      } else {\n        alert('User not found or incorrect credentials');\n      }\n    }).catch(error => {\n      console.error(`Error fetching data: ${error}`);\n    });\n  };\n\n  // Update the current time every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(timer);\n  }, []);\n  const hours = currentTime.getHours();\n  const min = currentTime.getMinutes();\n  const sec = currentTime.getSeconds();\n  const onInputchange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setUserdata(prevstate => ({\n      ...prevstate,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const loginStyle = {\n    display: isVisible ? 'block' : 'none',\n    zIndex: isVisible ? 100 : 0\n  };\n  const currentDay = currentTime.toLocaleDateString('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    style: loginStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currentTime\",\n        children: `${hours} : ${min < 10 ? '0' + min : min} : ${sec < 10 ? '0' + sec : sec}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currentday\",\n        children: currentDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://appacmedia.com/images/appac-logo-new.svg\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wel-hed\",\n        children: \"WELCOME TO NEW BETA VERSION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: user.username,\n        \"aria-required\": true,\n        placeholder: \"Username\",\n        id: \"username\",\n        onChange: onInputchange // Corrected to onChange event\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: user.password,\n        placeholder: \"Password\",\n        id: \"password\",\n        onChange: onInputchange // Corrected to onChange event\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"for-pass\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginbutton\",\n        onClick: onLogin // Trigger the login function\n        ,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"tiBlRXAO7buZ3gm0d7X+ETElHz4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","isVisible","_s","currentTime","setCurrentTime","Date","user","setUserdata","username","password","empid","navigate","onLogin","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","success","alert","sessionStorage","setItem","getItemItem","catch","error","timer","setInterval","clearInterval","hours","getHours","min","getMinutes","sec","getSeconds","onInputchange","event","name","value","type","checked","target","prevstate","loginStyle","display","zIndex","currentDay","toLocaleDateString","weekday","month","day","year","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","id","onChange","required","onClick","_c","$RefreshReg$"],"sources":["F:/crm01/appac-crm/src/component/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate\r\n\r\nfunction Login({ isVisible }) {\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [user, setUserdata] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const empid = user.username;\r\n  const password = user.password;\r\n  \r\n  // Initialize useNavigate\r\n  const navigate = useNavigate();\r\n\r\n  const onLogin = () => {\r\n    fetch('http://localhost:8000/testapi/v1/login', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        empid,\r\n        password,\r\n      })\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(empid);\r\n      if (data && data.success) {\r\n        // Check if the user's empid matches and the password is correct\r\n        if (data.empid === empid && data.password === password) {\r\n          alert('User is present, login successful');\r\n          // Redirect to homepage or another URL\r\n          sessionStorage.setItem(user === empid);\r\n          sessionStorage.getItemItem(user === empid);\r\n\r\n          navigate('/dashboard');  // Change the URL to \"/\"\r\n        } else {\r\n          alert('Invalid credentials');\r\n        }\r\n      } else {\r\n        alert('User not found or incorrect credentials');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(`Error fetching data: ${error}`);\r\n    });\r\n  };\r\n\r\n  // Update the current time every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    // Cleanup the interval on component unmount\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const hours = currentTime.getHours();\r\n  const min = currentTime.getMinutes();\r\n  const sec = currentTime.getSeconds();\r\n\r\n  const onInputchange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    setUserdata((prevstate) => ({\r\n      ...prevstate,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const loginStyle = {\r\n    display: isVisible ? 'block' : 'none',\r\n    zIndex: isVisible ? 100 : 0,\r\n  };\r\n\r\n  const currentDay = currentTime.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' });\r\n\r\n  return (\r\n    <div className='loginPage' style={loginStyle}>\r\n      <div className=\"login-div\">\r\n        <p className='currentTime'>{`${hours} : ${min < 10 ? '0' + min : min} : ${sec < 10 ? '0' + sec : sec}`}</p>\r\n        <p className='currentday'>{currentDay}</p>\r\n        <img src='https://appacmedia.com/images/appac-logo-new.svg' alt=\"Logo\" />\r\n        <p className='wel-hed'>WELCOME TO NEW BETA VERSION</p>\r\n\r\n        <input \r\n          type='text' \r\n          name='username'\r\n          value={user.username}\r\n          aria-required \r\n          placeholder='Username' \r\n          id=\"username\"\r\n          onChange={onInputchange}  // Corrected to onChange event\r\n          required\r\n        /><br />\r\n\r\n        <input \r\n          type='password' \r\n          name=\"password\"\r\n          value={user.password}\r\n          placeholder='Password' \r\n          id=\"password\"\r\n          onChange={onInputchange}  // Corrected to onChange event\r\n          required\r\n        />\r\n\r\n        <p className='for-pass'>\r\n          <button>Forgot Password?</button>\r\n        </p>\r\n\r\n        <button\r\n          className='loginbutton' \r\n          onClick={onLogin}  // Trigger the login function\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const ReportModal = require('../models/ReportModal'); // Ensure you import your model\n\nexports.editreport = async (req, res, next) => {\n  try {\n    // Extract report ID from request parameters\n    const {\n      id\n    } = req.params;\n\n    // Find the report by ID and update it with the data from request body\n    const updatedReport = await ReportModal.findByIdAndUpdate(id, req.body, {\n      new: true,\n      runValidators: true\n    } // Return the updated document and apply validation\n    );\n    if (!updatedReport) {\n      return res.status(404).json({\n        msg: 'Report not found',\n        error: 'No report found with this ID'\n      });\n    }\n\n    // Respond with the updated report\n    res.json({\n      msg: 'Report updated successfully',\n      data: updatedReport\n    });\n  } catch (error) {\n    res.status(500).json({\n      msg: 'Report not updated',\n      error: error.message\n    });\n  }\n};","map":{"version":3,"names":["ReportModal","require","exports","editreport","req","res","next","id","params","updatedReport","findByIdAndUpdate","body","new","runValidators","status","json","msg","error","data","message"],"sources":["F:/CRM/appac-crm/src/component/reportTable.jsx"],"sourcesContent":["const ReportModal = require('../models/ReportModal'); // Ensure you import your model\r\n\r\nexports.editreport = async (req, res, next) => {\r\n  try {\r\n    // Extract report ID from request parameters\r\n    const { id } = req.params;\r\n    \r\n    // Find the report by ID and update it with the data from request body\r\n    const updatedReport = await ReportModal.findByIdAndUpdate(\r\n      id, \r\n      req.body, \r\n      { new: true, runValidators: true } // Return the updated document and apply validation\r\n    );\r\n    \r\n    if (!updatedReport) {\r\n      return res.status(404).json({\r\n        msg: 'Report not found',\r\n        error: 'No report found with this ID'\r\n      });\r\n    }\r\n\r\n    // Respond with the updated report\r\n    res.json({\r\n      msg: 'Report updated successfully',\r\n      data: updatedReport\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      msg: 'Report not updated',\r\n      error: error.message\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAEtDC,OAAO,CAACC,UAAU,GAAG,OAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC7C,IAAI;IACF;IACA,MAAM;MAAEC;IAAG,CAAC,GAAGH,GAAG,CAACI,MAAM;;IAEzB;IACA,MAAMC,aAAa,GAAG,MAAMT,WAAW,CAACU,iBAAiB,CACvDH,EAAE,EACFH,GAAG,CAACO,IAAI,EACR;MAAEC,GAAG,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAK,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,CAACJ,aAAa,EAAE;MAClB,OAAOJ,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,GAAG,EAAE,kBAAkB;QACvBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;;IAEA;IACAZ,GAAG,CAACU,IAAI,CAAC;MACPC,GAAG,EAAE,6BAA6B;MAClCE,IAAI,EAAET;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdZ,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,GAAG,EAAE,oBAAoB;MACzBC,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}